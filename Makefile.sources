#
# NetSurf source file inclusion
#
# Included by main makefile -- indicates generic sources for every build.
#

S_CONTENT := content.c dirlist.c fetch.c hlcache.c llcache.c urldb.c	\
	fetchers/fetch_curl.c fetchers/fetch_data.c fetchers/fetch_file.c

S_CSS := css.c dump.c internal.c select.c utils.c

S_RENDER := box.c box_construct.c box_normalise.c favicon.c 		\
	font.c form.c html.c html_interaction.c html_redraw.c		\
	hubbub_binding.c imagemap.c layout.c list.c table.c textplain.c

S_UTILS := base64.c filename.c hashtable.c http.c locale.c messages.c 	\
	talloc.c url.c utf8.c utils.c useragent.c findresource.c log.c

S_DESKTOP := cookies.c history_global_core.c hotlist.c knockout.c	\
	options.c plot_style.c print.c search.c searchweb.c scroll.c	\
	sslcert.c textarea.c tree.c tree_url_node.c version.c		\

# S_COMMON are sources common to all builds
S_COMMON := $(addprefix content/,$(S_CONTENT))				\
	$(addprefix css/,$(S_CSS))					\
	$(addprefix render/,$(S_RENDER))				\
	$(addprefix utils/,$(S_UTILS))					\
	$(addprefix desktop/,$(S_DESKTOP))

# S_IMAGE are sources related to image management
S_IMAGE := bmp.c gif.c ico.c jpeg.c mng.c nssprite.c png.c svg.c rsvg.c \
	webp.c
S_IMAGE := $(addprefix image/,$(S_IMAGE))

# S_PDF are sources of the pdf plotter + the ones for paged-printing
S_PDF := pdf_plotters.c font_haru.c
S_PDF := $(addprefix desktop/save_pdf/,$(S_PDF))

# S_BROWSER are sources related to full browsers but are common
# between RISC OS, GTK, BeOS and AmigaOS builds
S_BROWSER := browser.c download.c frames.c history_core.c netsurf.c	\
	save_complete.c save_text.c selection.c textinput.c
S_BROWSER := $(addprefix desktop/,$(S_BROWSER))


# Some extra rules for building the transliteration table.
ifeq ($(HOST),riscos)
utils/translit.c: transtab
	$(VQ)echo "TRANSTAB: utils/translit.c"
	$(Q)dir utils
	$(Q)$(PERL) tt2code < transtab > translit.c
	$(Q)dir ^
else
utils/translit.c: transtab
	$(VQ)echo "TRANSTAB: utils/translit.c"
	$(Q)cd utils; $(PERL) tt2code < transtab > translit.c
endif

clean-intermediates:
	$(VQ)echo "   CLEAN: intermediates"
	$(Q)$(RM) utils/translit.c

CLEANS += clean-intermediates
